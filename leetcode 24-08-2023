852. Peak Index in a Mountain Array


class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {

    int s = 0;
    int e = arr.size()-1;

    while(s<=e)
    {
    int mid = s + (e - s) / 2;
        if (arr[mid] > arr[mid - 1] )
        {
            s = mid ;
        }

        if (arr[mid] < arr[mid - 1] )
        {
            e = mid ;
        }

        if (arr[mid] > arr[mid - 1] && arr[mid + 1] < arr[mid])
        // else
        {
            return mid;
        }
    }
    return -1;
    }
};


// class Solution {
// public:
//     int peakIndexInMountainArray(vector<int>& arr) {
//         int start=0, end = arr.size()-1;

//         while(start<end){
//             int mid = start + (end-start)/2;
//             if(arr[mid] > arr[mid+1]){
//                 // we are in decreasing part of arr, mid might be ans
//                 end =mid;
//             }else{
//                 start = mid+1;
//             }
//         }
//         return start;
//     }
// };
